<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

        <changeSet id="bahmni-atomfeed-offset-marker" author="tw" context="rel3">
                <preConditions onFail="MARK_RAN">
                        <sqlCheck expectedResult="0">
                                SELECT COUNT(*) FROM scheduler_task_config where schedulable_class = 'org.openmrs.module.atomfeed.scheduler.tasks.EventRecordsNumberOffsetMarkerTask'
                        </sqlCheck>
                </preConditions>
                <comment>rel3</comment>
                <sql>
                        INSERT INTO  scheduler_task_config  (name, description, schedulable_class,
                        start_time, start_time_pattern, repeat_interval, start_on_startup, started,
                        created_by, date_created, changed_by, date_changed, last_execution_time, uuid )
                        VALUES ('OpenMRS event offset marker task', NULL, 'org.openmrs.module.atomfeed.scheduler.tasks.EventRecordsNumberOffsetMarkerTask',
                        '2014-01-14 00:00:00','MM/dd/yyyy HH:mm:ss',86400, 1, 1,
                        1, now(), NULL, NULL, NULL, uuid());
                </sql>
        </changeSet>
        <changeSet id="default-201604211822" author="Gautam, Angshuman">
            <preConditions onFail="MARK_RAN">
                <sqlCheck expectedResult="0">
                    select count(concept_id) from concept where uuid="5090AAAAAAAAAAAAAAAAAAAAAAAAAAAA";
                </sqlCheck>
            </preConditions>
            <comment>update Height concept uuid to standard CEIL concept uuid</comment>
            <sql>
                update concept set uuid="5090AAAAAAAAAAAAAAAAAAAAAAAAAAAA" where concept_id in (
                select concept_name.concept_id from concept_name where name="Height" and concept_name_type="FULLY_SPECIFIED"
                );
            </sql>
        </changeSet>
        <changeSet id="default-201604211823" author="Gautam, Angshuman">
            <preConditions onFail="MARK_RAN">
                <sqlCheck expectedResult="0">
                    select count(concept_id) from concept where uuid="5089AAAAAAAAAAAAAAAAAAAAAAAAAAAA";
                </sqlCheck>
            </preConditions>
            <comment>update Weight concept uuid to standard CEIL concept uuid</comment>
            <sql>
                update concept set uuid="5089AAAAAAAAAAAAAAAAAAAAAAAAAAAA" where concept_id in (
                select concept_name.concept_id from concept_name where name="Weight" and concept_name_type="FULLY_SPECIFIED"
                );
            </sql>
        </changeSet>
    <changeSet id="default-201905311115" author="Bindu, Angshuman">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT count(*) FROM location where name="OT";
            </sqlCheck>
        </preConditions>
        <comment> Add default location for OT module </comment>
        <sql>
            INSERT INTO location (name, description, retired, uuid, date_created, creator) VALUES ('OT', 'Operation Theater', FALSE, uuid(), NOW(), 1);
        </sql>
    </changeSet>
    <changeSet id="default-201907091507" author="Bindu, Angshuman" >
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                select count(*) from location_tag where name = 'Operation Theater' and description = 'Operation Theater';
            </sqlCheck>
        </preConditions>
        <comment>Add operation theater location tag</comment>
        <sql>
            INSERT INTO location_tag(name, description, creator, date_created, retired, uuid) VALUES ('Operation Theater', 'Operation Theater', 1, now(), 0, uuid());
        </sql>
    </changeSet>
    <changeSet id="default-201905311116" author="Bindu, Angshuman">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT count(*) from location_tag_map where location_tag_id IN (SELECT location_tag_id from location_tag where name="Operation Theater");
            </sqlCheck>
        </preConditions>
        <comment> Tag OT location as Operation Theatre </comment>
        <sql>
            SELECT location_tag_id INTO @location_tag_id FROM location_tag WHERE name = "Operation Theater" and description = "Operation Theater";
            SELECT location_id INTO @location_id FROM location WHERE location.name="OT" and description = "Operation Theater";

            INSERT INTO location_tag_map(location_id, location_tag_id) VALUES(@location_id, @location_tag_id);
        </sql>
    </changeSet>
    <changeSet id="IRAQ-201907051457" author="Alekhya, Pritam">
        <comment>Stored Procedure to add concept</comment>
        <sql>
            DROP PROCEDURE IF EXISTS add_concept;
        </sql>
        <sqlFile path="utils/addConceptProcedure.sql" endDelimiter="#"/>
    </changeSet>
    <changeSet id="IRAQ-201907051458" author="Alekhya, Pritam">
        <comment>Stored Procedure to add concept answer</comment>
        <sql>
            DROP PROCEDURE IF EXISTS add_concept_answer;
        </sql>
        <sqlFile path="utils/addConceptAnswerProcedure.sql" endDelimiter="#"/>
    </changeSet>
    <changeSet id="IRAQ-201907051459" author="Alekhya, Pritam">
        <comment>Stored Procedure to add reference term</comment>
        <sql>
            DROP PROCEDURE IF EXISTS CREATE_REFERENCE_MAPPING_CEIL;
        </sql>
        <sqlFile path="utils/createProcedureForCEIL.sql" endDelimiter="#"/>
    </changeSet>
    <changeSet id="IRAQ-201907130007" author="Pritam">
        <comment>Stored Procedure to add reference term</comment>
        <sql>
            DROP PROCEDURE IF EXISTS CREATE_REFERENCE_MAPPING_ICD;
        </sql>
        <sqlFile path="utils/createProcedureForICD.sql" endDelimiter="#"/>
    </changeSet>
    <include file ="admissionCommittee/admissionCommittee.xml"/>
    <include file ="mloForm/mloForm.xml"/>
    <include file ="documentUpload.xml"/>

    <changeSet id="IRAQ-1562847265" author="Siva">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT count(1) from visit_type where name = 'MLO';
            </sqlCheck>
        </preConditions>
        <comment>Add MLO visit type</comment>
        <sql>
            INSERT INTO visit_type(name, description, creator, date_created, retired, uuid) VALUES ('MLO', 'MLO vist', 1, now(), 0, uuid());
        </sql>
    </changeSet>
    <changeSet id="IRAQ-1562913957582" author="Vinay, Sowmika" runOnChange="true">
        <comment>Adding patient listing queues in clinical module for patients of MLO visit with date of presentation in Admission Committee form is not filled and date of assessment in MLO Medical Assessment form is filled</comment>
        <sqlFile path="clinicalQueues/awaitingValidationPatientsQueue.sql"/>
    </changeSet>
    <changeSet id="IRAQ-1562914144466" author="Vinay, Sowmika" runOnChange="true">
        <comment>Adding patient listing queues in clinical module for patients of MLO visit with date of presentation in Admission Committee form is filled and outcome of admission in Admission Committe form is Valid</comment>
        <sqlFile path="clinicalQueues/validPatientsQueue.sql"/>
    </changeSet>
    <changeSet id="IRAQ-201907151657" author="Pritam">
    <preConditions onFail="MARK_RAN">
      <sqlCheck expectedResult="4">
          SELECT count(*) FROM location_tag_map WHERE location_tag_id in (SELECT location_tag_id FROM location_tag WHERE name in ( 'Visit Location','Appointment Location'));
      </sqlCheck>
    </preConditions>
    <comment>Mapping location_tag visit location to location</comment>
    <sql>
    SELECT location_tag_id INTO @location_tag_id1 FROM location_tag WHERE name = 'Visit Location';
    SELECT location_tag_id INTO @location_tag_id2 FROM location_tag WHERE name = 'Appointment Location';

    SELECT location_id INTO @location_id1 FROM location WHERE location.name='IPD';
    INSERT INTO location_tag_map(location_id, location_tag_id) VALUES(@location_id1, @location_tag_id1);
    INSERT INTO location_tag_map(location_id, location_tag_id) VALUES(@location_id1, @location_tag_id2);
    </sql>
  </changeSet>
</databaseChangeLog>
